<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="Microsoft.NET.Sdk.WindowsDesktop">
  <PropertyGroup>
    <Title>Bonsai</Title>
    <Description>A visual programming language for data stream processing built on top of Rx for .NET.</Description>
    <PackageTags>Bonsai Rx Reactive Extensions</PackageTags>
    <GenerateDocumentationFile>false</GenerateDocumentationFile>
    <UseWindowsForms>true</UseWindowsForms>
    <TargetFramework>net472</TargetFramework>
    <Version>2.6.3</Version>
    <OutputType>Exe</OutputType>
    <DisableWinExeOutputInference>true</DisableWinExeOutputInference>
    <ApplicationIcon>..\Bonsai.Editor\Bonsai.ico</ApplicationIcon>
    <ApplicationManifest>App.manifest</ApplicationManifest>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="ILRepack.MSBuild.Task" Version="2.0.13">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="OpenCV.Net" Version="3.4.0-preview3" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\Bonsai.Core\Bonsai.Core.csproj" />
    <ProjectReference Include="..\Bonsai.Design\Bonsai.Design.csproj" />
    <ProjectReference Include="..\Bonsai.Editor\Bonsai.Editor.csproj" />
    <ProjectReference Include="..\Bonsai.NuGet.Design\Bonsai.NuGet.Design.csproj" PrivateAssets="all" />
    <ProjectReference Include="..\Bonsai.Configuration\Bonsai.Configuration.csproj" PrivateAssets="all" />
  </ItemGroup>
  <ItemGroup>
    <Compile Update="Properties\Resources.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Update="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
  </ItemGroup>
  <Target Name="ILRepack" AfterTargets="Build">
    <PropertyGroup>
      <WorkingDirectory>$(MSBuildThisFileDirectory)bin\$(Configuration)\$(TargetFramework)</WorkingDirectory>
    </PropertyGroup>
    <ItemGroup>
      <InputAssemblies Include="Bonsai.Configuration.dll" />
      <InputAssemblies Include="Bonsai.NuGet.dll" />
      <InputAssemblies Include="Bonsai.NuGet.Design.dll" />
      <InputAssemblies Include="Newtonsoft.Json.dll" />
      <InputAssemblies Include="NuGet.Common.dll" />
      <InputAssemblies Include="NuGet.Configuration.dll" />
      <InputAssemblies Include="NuGet.Frameworks.dll" />
      <InputAssemblies Include="NuGet.Packaging.dll" />
      <InputAssemblies Include="NuGet.Protocol.dll" />
      <InputAssemblies Include="NuGet.Resolver.dll" />
      <InputAssemblies Include="NuGet.Versioning.dll" />
    </ItemGroup>
    <ItemGroup>
      <InternalizeExcludeAssemblies Include="^Bonsai.Configuration" />
    </ItemGroup>
    <ILRepack OutputType="$(OutputType)" MainAssembly="$(AssemblyName).exe" OutputAssembly="$(AssemblyName).exe" InputAssemblies="@(InputAssemblies)" InternalizeExcludeAssemblies="@(InternalizeExcludeAssemblies)" WorkingDirectory="$(WorkingDirectory)" />
  </Target>
  <Target Name="NuGetConfig" AfterTargets="Build">
    <WriteLinesToFile File="$(TargetDir)NuGet.config" Lines="$([System.IO.File]::ReadAllText('Properties\NuGet.config').Replace('%PackageDir%','$(ProjectDir)..\bin\$(Configuration)'))" Overwrite="true" WriteOnlyWhenDifferent="true" />
  </Target>
</Project>