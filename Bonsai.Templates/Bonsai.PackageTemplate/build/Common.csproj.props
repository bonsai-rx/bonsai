<!--
  Solution-specific configuration/targets should generally not be placed in this file.
  For solution-wide NuGet properties, update Package.props
  For everything else, update or create Project.csproj.props
-->
<Project>
  <!-- Common C# properties -->
  <PropertyGroup>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <UseArtifactsOutput>true</UseArtifactsOutput>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <LangVersion>latest</LangVersion>
    <Features>strict</Features>
    <Nullable>enable</Nullable>
  </PropertyGroup>

  <!-- Universal NuGet package and Source Link properties -->
  <PropertyGroup>
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <PackageType>Dependency;BonsaiLibrary</PackageType>
    <IncludeSymbols>true</IncludeSymbols>
    <IncludeSymbols Condition="'$(Configuration)' != 'Release'">false</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    <EmbedUntrackedSources>false</EmbedUntrackedSources>
    <EmbedUntrackedSources Condition="'$(ContinuousIntegrationBuild)' == 'true'">true</EmbedUntrackedSources>
  </PropertyGroup>

  <PropertyGroup>
    <!-- Opt in to modern resource embedding (required for building from .NET SDK) -->
    <GenerateResourceUsePreserializedResources>true</GenerateResourceUsePreserializedResources>

    <!-- Enable windows targeting (required when building from non-Windows platforms) -->
    <EnableWindowsTargeting>true</EnableWindowsTargeting>

    <!-- Handle mismatched target frameworks and malformed version strings as errors. -->
    <WarningsAsErrors>$(WarningsAsErrors);NU1701;CS7035</WarningsAsErrors>

    <!-- Provide Bonsai executable path for use with launchSettings.json -->
    <BonsaiExecutablePath>$(MSBuildThisFileDirectory)../.bonsai/Bonsai.exe</BonsaiExecutablePath>
  </PropertyGroup>

  <!-- Common properties for test projects -->
  <PropertyGroup Condition="$(MSBuildProjectName.EndsWith('.Tests'))">
    <IsPackable>false</IsPackable>
    <GenerateDocumentationFile>false</GenerateDocumentationFile>
  </PropertyGroup>

  <Import Project="Package.props" />
  <Import Project="Version.props" />

  <!-- Resolve embedded manifest asset paths -->
  <PropertyGroup>
    <PackageIconSourcePath>$(MSBuildThisFileDirectory)$(PackageIcon)</PackageIconSourcePath>
    <PackageLicenseSourcePath>$(MSBuildThisFileDirectory)../$(PackageLicenseFile)</PackageLicenseSourcePath>
    <PackageReadmeSourcePath>$(MSBuildThisFileDirectory)../$(PackageReadmeFile)</PackageReadmeSourcePath>
    <PackageReadmeSourcePath Condition="Exists('$(MSBuildThisFileDirectory)../docs/$(PackageReadmeFile)')">$(MSBuildThisFileDirectory)../docs/$(PackageReadmeFile)</PackageReadmeSourcePath>
    <PackageReadmeSourcePath Condition="Exists('$(ProjectDir)$(PackageReadmeFile)')">$(ProjectDir)$(PackageReadmeFile)</PackageReadmeSourcePath>
  </PropertyGroup>

  <Import Project="Project.csproj.props" Condition="Exists('Project.csproj.props')" />
</Project>