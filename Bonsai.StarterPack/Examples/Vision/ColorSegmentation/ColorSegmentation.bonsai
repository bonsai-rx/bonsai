<?xml version="1.0" encoding="utf-8"?>
<WorkflowBuilder Version="2.0.0">
  <Workflow xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:q2="clr-namespace:Bonsai.Scripting;assembly=Bonsai.Scripting" xmlns:q1="clr-namespace:Bonsai.Vision;assembly=Bonsai.Vision" xmlns="https://horizongir.org/bonsai">
    <Nodes>
      <Expression xsi:type="Source">
        <PropertyMappings />
        <Generator xsi:type="q1:FileCapture">
          <q1:FileName>Axis.avi</q1:FileName>
          <q1:PlaybackRate>0</q1:PlaybackRate>
          <q1:Loop>true</q1:Loop>
          <q1:Playing>true</q1:Playing>
        </Generator>
      </Expression>
      <Expression xsi:type="Combinator">
        <PropertyMappings />
        <Combinator xsi:type="q1:ConvertColor">
          <q1:Conversion>Bgr2Hsv</q1:Conversion>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <PropertyMappings />
        <Combinator xsi:type="q1:HsvThreshold">
          <q1:Lower>
            <q1:Val0>150</q1:Val0>
            <q1:Val1>160</q1:Val1>
            <q1:Val2>45</q1:Val2>
            <q1:Val3>0</q1:Val3>
          </q1:Lower>
          <q1:Upper>
            <q1:Val0>179</q1:Val0>
            <q1:Val1>255</q1:Val1>
            <q1:Val2>255</q1:Val2>
            <q1:Val3>255</q1:Val3>
          </q1:Upper>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <PropertyMappings />
        <Combinator xsi:type="q1:HsvThreshold">
          <q1:Lower>
            <q1:Val0>50</q1:Val0>
            <q1:Val1>70</q1:Val1>
            <q1:Val2>45</q1:Val2>
            <q1:Val3>0</q1:Val3>
          </q1:Lower>
          <q1:Upper>
            <q1:Val0>90</q1:Val0>
            <q1:Val1>255</q1:Val1>
            <q1:Val2>255</q1:Val2>
            <q1:Val3>255</q1:Val3>
          </q1:Upper>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <PropertyMappings />
        <Combinator xsi:type="q1:FindContours">
          <q1:Mode>External</q1:Mode>
          <q1:Method>ChainApproxNone</q1:Method>
          <q1:Offset>
            <q1:X>0</q1:X>
            <q1:Y>0</q1:Y>
          </q1:Offset>
          <q1:MinArea>200</q1:MinArea>
          <q1:MaxArea xsi:nil="true" />
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <PropertyMappings />
        <Combinator xsi:type="q1:BinaryRegionAnalysis" />
      </Expression>
      <Expression xsi:type="Combinator">
        <PropertyMappings />
        <Combinator xsi:type="q1:FindContours">
          <q1:Mode>External</q1:Mode>
          <q1:Method>ChainApproxNone</q1:Method>
          <q1:Offset>
            <q1:X>0</q1:X>
            <q1:Y>0</q1:Y>
          </q1:Offset>
          <q1:MinArea>200</q1:MinArea>
          <q1:MaxArea xsi:nil="true" />
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <PropertyMappings />
        <Combinator xsi:type="q1:BinaryRegionAnalysis" />
      </Expression>
      <Expression xsi:type="Combinator">
        <PropertyMappings />
        <Combinator xsi:type="q1:LargestBinaryRegion" />
      </Expression>
      <Expression xsi:type="Combinator">
        <PropertyMappings />
        <Combinator xsi:type="q1:LargestBinaryRegion" />
      </Expression>
      <Expression xsi:type="q2:PythonTransform">
        <q2:Script>import clr
clr.AddReference("OpenCV.Net")
from OpenCV.Net import CV, IplImage, Point, Scalar

def getOutputType():
    return clr.GetClrType(IplImage)

def process(input):
    red = input.Item1
    green = input.Item2
    image = input.Item3

    output = image.Clone()

    if red.Area &gt; 0:
      CV.Circle(output, Point(red.Centroid), 10, Scalar.Rgb(255, 0, 0), -1)

    if green.Area &gt; 0:
      CV.Circle(output, Point(green.Centroid), 10, Scalar.Rgb(0, 255, 0), -1)

    return output</q2:Script>
      </Expression>
      <Expression xsi:type="Combinator">
        <PropertyMappings />
        <Combinator xsi:type="Zip" />
      </Expression>
    </Nodes>
    <Edges>
      <Edge>
        <From>0</From>
        <To>1</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>0</From>
        <To>11</To>
        <Label>Source3</Label>
      </Edge>
      <Edge>
        <From>1</From>
        <To>2</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>1</From>
        <To>3</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>2</From>
        <To>4</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>3</From>
        <To>6</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>4</From>
        <To>5</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>5</From>
        <To>8</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>6</From>
        <To>7</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>7</From>
        <To>9</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>8</From>
        <To>11</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>9</From>
        <To>11</To>
        <Label>Source2</Label>
      </Edge>
      <Edge>
        <From>11</From>
        <To>10</To>
        <Label>Source1</Label>
      </Edge>
    </Edges>
  </Workflow>
  <ExtensionTypes>
    <Type>Bonsai.Vision.FileCapture, Bonsai.Vision, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.ConvertColor, Bonsai.Vision, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.HsvThreshold, Bonsai.Vision, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.FindContours, Bonsai.Vision, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.BinaryRegionAnalysis, Bonsai.Vision, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.LargestBinaryRegion, Bonsai.Vision, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Scripting.PythonTransform, Bonsai.Scripting, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.Zip, Bonsai.Core, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null</Type>
  </ExtensionTypes>
</WorkflowBuilder>