<?xml version="1.0" encoding="utf-8"?>
<WorkflowBuilder Version="2.2.0">
  <Workflow xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:q3="clr-namespace:Bonsai.Scripting;assembly=Bonsai.Scripting" xmlns:q2="clr-namespace:Bonsai.Dsp;assembly=Bonsai.Dsp" xmlns:q1="clr-namespace:Bonsai.Audio;assembly=Bonsai.Audio" xmlns="https://horizongir.org/bonsai">
    <Nodes>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q1:AudioCapture">
          <q1:Frequency>22050</q1:Frequency>
          <q1:BufferLength>10</q1:BufferLength>
        </Combinator>
      </Expression>
      <Expression xsi:type="NestedWorkflow">
        <Name>FourierTransform</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="q2:Submatrix">
                <q2:StartRow>0</q2:StartRow>
                <q2:EndRow xsi:nil="true" />
                <q2:StartCol>0</q2:StartCol>
                <q2:EndCol>512</q2:EndCol>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="q2:DiscreteFourierTransform">
                <q2:OperationFlags>Forward</q2:OperationFlags>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="IntProperty">
                <Value>1024</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
            <Expression xsi:type="ExternalizedPropertyOfInt32ElementCountBuffer">
              <MemberName>Count</MemberName>
              <Name />
              <Value>1024</Value>
            </Expression>
            <Expression xsi:type="ExternalizedPropertyOfNullableOfInt32Submatrix">
              <MemberName>EndCol</MemberName>
              <Name />
              <Value>256</Value>
            </Expression>
            <Expression xsi:type="Divide">
              <Operand xsi:type="IntProperty">
                <Value>2</Value>
              </Operand>
            </Expression>
            <Expression xsi:type="ExternalizedPropertyOfInt32IntProperty">
              <MemberName>Value</MemberName>
              <Name>BufferSize</Name>
              <Value>1024</Value>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="q2:Buffer">
                <q2:Count>1024</q2:Count>
                <q2:Skip xsi:nil="true" />
              </Combinator>
            </Expression>
          </Nodes>
          <Edges>
            <Edge>
              <From>0</From>
              <To>4</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>1</From>
              <To>0</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>2</From>
              <To>7</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>2</From>
              <To>5</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>3</From>
              <To>9</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>5</From>
              <To>9</To>
              <Label>Source2</Label>
            </Edge>
            <Edge>
              <From>6</From>
              <To>0</To>
              <Label>Source2</Label>
            </Edge>
            <Edge>
              <From>7</From>
              <To>6</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>8</From>
              <To>2</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>9</From>
              <To>1</To>
              <Label>Source1</Label>
            </Edge>
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q2:RunningAverage">
          <q2:Alpha>0.5</q2:Alpha>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q2:ConvertScale">
          <q2:Depth>F32</q2:Depth>
          <q2:Scale>1</q2:Scale>
          <q2:Shift>0</q2:Shift>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q2:Extrema" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q2:Magnitude" />
      </Expression>
      <Expression xsi:type="q3:PythonTransform">
        <q3:Script>import clr
clr.AddReference("OpenCV.Net")
from OpenCV.Net import CV, IplImage, Point, Scalar, Size, IplDepth
from math import sin, cos, pi

particle = None
output = None

width = 640
height = 480

def load():
    global particle, output
    particle = Point(width / 2, height / 2)
    output = IplImage(Size(width, height), IplDepth.U8, 3)
    output.SetZero()

@returns(IplImage)
def process(value):
    global particle, output
    extrema = value.Item1
    minpitch = value.Item2
    pitchrange = value.Item3
    magnitudescale = value.Item4
    magnitude = extrema.MaxValue / magnitudescale
    if magnitude &gt; 1:
        angle = ((extrema.MaxLocation.X - minpitch) / pitchrange) * 2 * pi
        particle = Point((particle.X + magnitude * cos(angle)) % width, (particle.Y + magnitude * sin(angle)) % height)
    CV.Circle(output, particle, 4, Scalar.Rgb(255, 0, 0), -1)
    return output.Clone()

def unload():
    global particle, output
    output.Close()
    output = None
    particle = None</q3:Script>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="FloatProperty">
          <Value>35</Value>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="FloatProperty">
          <Value>50</Value>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="FloatProperty">
          <Value>50000</Value>
        </Combinator>
      </Expression>
      <Expression xsi:type="ExternalizedPropertyOfSingleFloatProperty">
        <MemberName>Value</MemberName>
        <Name>MinPitch</Name>
        <Value>35</Value>
      </Expression>
      <Expression xsi:type="ExternalizedPropertyOfSingleFloatProperty">
        <MemberName>Value</MemberName>
        <Name>PitchRange</Name>
        <Value>50</Value>
      </Expression>
      <Expression xsi:type="ExternalizedPropertyOfSingleFloatProperty">
        <MemberName>Value</MemberName>
        <Name>MagnitudeScale</Name>
        <Value>50000</Value>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="CombineLatest" />
      </Expression>
    </Nodes>
    <Edges>
      <Edge>
        <From>0</From>
        <To>3</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>1</From>
        <To>5</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>2</From>
        <To>1</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>3</From>
        <To>2</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>4</From>
        <To>13</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>5</From>
        <To>4</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>7</From>
        <To>13</To>
        <Label>Source2</Label>
      </Edge>
      <Edge>
        <From>8</From>
        <To>13</To>
        <Label>Source3</Label>
      </Edge>
      <Edge>
        <From>9</From>
        <To>13</To>
        <Label>Source4</Label>
      </Edge>
      <Edge>
        <From>10</From>
        <To>7</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>11</From>
        <To>8</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>12</From>
        <To>9</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>13</From>
        <To>6</To>
        <Label>Source1</Label>
      </Edge>
    </Edges>
  </Workflow>
  <ExtensionTypes>
    <Type>Bonsai.Audio.AudioCapture, Bonsai.Audio, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Dsp.Submatrix, Bonsai.Dsp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Dsp.DiscreteFourierTransform, Bonsai.Dsp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.IntProperty, Bonsai.Core, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.ExternalizedProperty`2[[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[Bonsai.Dsp.ElementCountBuffer, Bonsai.Dsp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null]], Bonsai.Core, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.ExternalizedProperty`2[[System.Nullable`1[[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[Bonsai.Dsp.Submatrix, Bonsai.Dsp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null]], Bonsai.Core, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.DivideBuilder, Bonsai.Core, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.ExternalizedProperty`2[[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[Bonsai.Expressions.IntProperty, Bonsai.Core, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null]], Bonsai.Core, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Dsp.Buffer, Bonsai.Dsp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Dsp.RunningAverage, Bonsai.Dsp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Dsp.ConvertScale, Bonsai.Dsp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Dsp.Extrema, Bonsai.Dsp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Dsp.Magnitude, Bonsai.Dsp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Scripting.PythonTransform, Bonsai.Scripting, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.FloatProperty, Bonsai.Core, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.ExternalizedProperty`2[[System.Single, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[Bonsai.Expressions.FloatProperty, Bonsai.Core, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null]], Bonsai.Core, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.CombineLatest, Bonsai.Core, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
  </ExtensionTypes>
</WorkflowBuilder>